version: '3.3'
services:
  # Kafdrop
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: 'no'
    environment:
      KAFKA_BROKERCONNECT: b-1.rdscdcpoc.a9xfz6.c2.kafka.ap-southeast-1.amazonaws.com:9092,b-2.rdscdcpoc.a9xfz6.c2.kafka.ap-southeast-1.amazonaws.com:9092
      SCHEMAREGISTRY_CONNECT: http://schema-registry:8081 #### add when add avro schema registry
    ports:
      - 9000:9000

  # Debezium Connector
  kconnect:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8083:8083
    environment:
      CONFIG_STORAGE_TOPIC: cdc_connect_configs
      OFFSET_STORAGE_TOPIC: cdc_connect_offsets
      STATUS_STORAGE_TOPIC: cdc_connect_status
      BOOTSTRAP_SERVERS: b-1.rdscdcpoc.a9xfz6.c2.kafka.ap-southeast-1.amazonaws.com:9092,b-2.rdscdcpoc.a9xfz6.c2.kafka.ap-southeast-1.amazonaws.com:9092
      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter #### add when add avro schema registry
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081 #### add when add avro schema registry
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter #### add when add avro schema registry
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081 #### add when add avro schema registry

  # Kafka Connect UI
  kafka-connect-ui:
    image: landoop/kafka-connect-ui
    environment:
      CONNECT_URL: http://kconnect:8083 # Pointing to the Kafka Connect REST API
    ports:
      - 8000:8000
    depends_on:
      - kconnect

  # Schema Registry - add when add avro schema registry
  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.0
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: b-1.cdcclustermsk.7vyu01.c2.kafka.ap-southeast-1.amazonaws.com:9092,b-2.cdcclustermsk.7vyu01.c2.kafka.ap-southeast-1.amazonaws.com:9092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
